function Game.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push pointer 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Game.run 6
push argument 0
pop pointer 0
push constant 4
call Array.new 1
pop local 1
push constant 1
pop local 4
label WHILE_EXP0
push local 4
push constant 5
lt
not
if-goto WHILE_END0
push local 4
push constant 15
push constant 12
push constant 2
call Ghost.new 4
pop local 2
push local 4
push constant 1
sub
push local 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 6
push constant 22
push constant 0
call Pacman.new 3
pop local 3
push constant 0
call Map.new 1
pop local 0
push constant 0
pop static 5
push local 0
call Map.render_map 1
pop temp 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 6
call String.new 1
push constant 115
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
label WHILE_EXP1
push pointer 0
push local 0
push local 3
push local 1
call Game.update_states 4
not
if-goto WHILE_END1
push local 3
push local 0
call Pacman.update_direction 2
pop temp 0
push local 3
call Pacman.erase 1
pop temp 0
push local 3
push local 0
call Pacman.move 2
pop temp 0
push local 3
call Pacman.draw 1
pop temp 0
push constant 0
pop local 4
label WHILE_EXP2
push local 4
push constant 4
lt
not
if-goto WHILE_END2
push local 4
push local 1
add
pop pointer 1
push that 0
pop local 2
push local 2
push local 0
push local 3
push constant 0
push local 1
add
pop pointer 1
push that 0
call Ghost.update_direction 4
pop temp 0
push local 2
call Ghost.erase 1
pop temp 0
push local 0
push local 2
call Ghost.get_x_chunk 1
push local 2
call Ghost.get_y_chunk 1
call Map.restore 3
pop temp 0
push local 2
push local 0
call Ghost.move 2
pop temp 0
push local 2
call Ghost.draw 1
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
push static 5
push constant 1
add
pop static 5
push constant 50
call Sys.wait 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
call Map.get_dotRemain 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 5
goto IF_END0
label IF_FALSE0
push constant 0
pop local 5
label IF_END0
push local 3
call Pacman.dispose 1
pop temp 0
push constant 0
pop local 4
label WHILE_EXP3
push local 4
push constant 4
lt
not
if-goto WHILE_END3
push local 4
push local 1
add
pop pointer 1
push that 0
pop local 2
push local 2
call Ghost.dispose 1
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP3
label WHILE_END3
push local 1
call Array.dispose 1
pop temp 0
push local 0
call Map.dispose 1
pop temp 0
push local 5
return
function Game.start 0
push argument 0
pop pointer 0
push constant 0
not
return
function Game.update_states 4
push argument 0
pop pointer 0
push argument 2
call Pacman.get_x_chunk 1
pop local 2
push argument 2
call Pacman.get_y_chunk 1
pop local 3
push argument 1
push local 2
push local 3
call Map.get_chunk_info 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push static 4
add
pop this 0
push argument 1
push local 2
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE0
push argument 1
push local 2
push constant 1
add
push local 3
call Map.get_chunk_info 3
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push static 4
add
pop this 0
push argument 1
push local 2
push constant 1
add
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE1
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.get_chunk_info 3
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push static 4
add
pop this 0
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE2
push argument 1
push local 2
push local 3
push constant 1
add
call Map.get_chunk_info 3
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push static 4
add
pop this 0
push argument 1
push local 2
push local 3
push constant 1
add
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE3
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.get_chunk_info 3
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push static 4
add
pop this 0
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE4
push argument 1
push local 2
push local 3
call Map.get_chunk_info 3
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push static 4
push constant 5
call Math.multiply 2
add
pop this 0
push argument 1
push local 2
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE5
push argument 1
push local 2
push constant 1
add
push local 3
call Map.get_chunk_info 3
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push static 4
push constant 5
call Math.multiply 2
add
pop this 0
push argument 1
push local 2
push constant 1
add
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE6
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.get_chunk_info 3
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
push static 4
push constant 5
call Math.multiply 2
add
pop this 0
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE7
push argument 1
push local 2
push local 3
push constant 1
add
call Map.get_chunk_info 3
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
push static 4
push constant 5
call Math.multiply 2
add
pop this 0
push argument 1
push local 2
push local 3
push constant 1
add
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE8
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.get_chunk_info 3
push constant 3
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 0
push static 4
push constant 5
call Math.multiply 2
add
pop this 0
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.eat_chunk 3
pop temp 0
push argument 1
call Map.reduce_dotRemain 1
pop temp 0
label IF_FALSE9
push constant 0
push constant 8
call Output.moveCursor 2
pop temp 0
push static 8
call Output.printString 1
pop temp 0
push constant 0
push constant 8
call Output.moveCursor 2
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push argument 1
call Map.get_dotRemain 1
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
return
label IF_FALSE10
push argument 1
push local 2
push local 3
call Map.get_chunk_info 3
push constant 2
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 4
lt
not
if-goto WHILE_END0
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ghost.is_transparent 1
not
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
call Ghost.set_frightened 1
pop temp 0
label IF_FALSE12
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push argument 1
push local 2
push local 3
call Map.eat_chunk 3
pop temp 0
label IF_FALSE11
push argument 1
push local 2
push constant 1
add
push local 3
call Map.get_chunk_info 3
push constant 2
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 4
lt
not
if-goto WHILE_END1
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ghost.is_transparent 1
not
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 0
call Ghost.set_frightened 1
pop temp 0
label IF_FALSE14
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push argument 1
push local 2
push constant 1
add
push local 3
call Map.eat_chunk 3
pop temp 0
label IF_FALSE13
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.get_chunk_info 3
push constant 2
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
pop local 1
label WHILE_EXP2
push local 1
push constant 4
lt
not
if-goto WHILE_END2
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ghost.is_transparent 1
not
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
call Ghost.set_frightened 1
pop temp 0
label IF_FALSE16
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push argument 1
push local 2
push constant 1
sub
push local 3
call Map.eat_chunk 3
pop temp 0
label IF_FALSE15
push argument 1
push local 2
push local 3
push constant 1
add
call Map.get_chunk_info 3
push constant 2
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push constant 0
pop local 1
label WHILE_EXP3
push local 1
push constant 4
lt
not
if-goto WHILE_END3
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ghost.is_transparent 1
not
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push local 0
call Ghost.set_frightened 1
pop temp 0
label IF_FALSE18
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push argument 1
push local 2
push local 3
push constant 1
add
call Map.eat_chunk 3
pop temp 0
label IF_FALSE17
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.get_chunk_info 3
push constant 2
eq
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 0
pop local 1
label WHILE_EXP4
push local 1
push constant 4
lt
not
if-goto WHILE_END4
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ghost.is_transparent 1
not
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push local 0
call Ghost.set_frightened 1
pop temp 0
label IF_FALSE20
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP4
label WHILE_END4
push argument 1
push local 2
push local 3
push constant 1
sub
call Map.eat_chunk 3
pop temp 0
label IF_FALSE19
push constant 0
pop local 1
label WHILE_EXP5
push local 1
push constant 4
lt
not
if-goto WHILE_END5
push local 1
push argument 3
add
pop pointer 1
push that 0
pop local 0
push static 5
push constant 20
call Math.divide 2
push constant 20
call Math.multiply 2
push static 5
eq
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push local 0
call Ghost.count 1
pop temp 0
label IF_FALSE21
push pointer 0
push argument 2
push local 0
call Game.is_collision 3
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push local 0
call Ghost.is_frightened 1
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push local 0
call Ghost.set_transparent 1
pop temp 0
label IF_FALSE23
push local 0
call Ghost.is_normal 1
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push constant 0
return
label IF_FALSE24
label IF_FALSE22
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP5
label WHILE_END5
push constant 0
not
return
function Game.is_collision 2
push argument 0
pop pointer 0
push argument 2
call Ghost.get_x_chunk 1
push argument 1
call Pacman.get_x_chunk 1
sub
pop local 0
push argument 2
call Ghost.get_y_chunk 1
push argument 1
call Pacman.get_y_chunk 1
sub
pop local 1
push local 0
call Math.abs 1
push constant 2
lt
push local 1
call Math.abs 1
push constant 2
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.win 0
push argument 0
pop pointer 0
push constant 8
call String.new 1
push constant 89
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Game.lose 0
push argument 0
pop pointer 0
push constant 9
call String.new 1
push constant 89
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Game.init 0
push constant 112
pop static 0
push constant 16
pop static 1
push constant 287
pop static 2
push constant 223
pop static 3
push constant 1
pop static 6
push constant 0
pop static 7
push constant 10
pop static 4
push constant 10
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
call String.new 1
pop static 8
push constant 0
return
function Game.release 0
push static 8
call String.dispose 1
pop temp 0
push constant 0
return
function Game.translate_x_to_col 0
push argument 0
push static 0
add
return
function Game.translate_y_to_row 0
push constant 255
push argument 0
push static 1
add
sub
return
function Game.ooxb 0
push argument 0
push constant 0
lt
push argument 0
push static 2
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.ooyb 0
push argument 0
push constant 0
lt
push argument 0
push static 3
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.ooxb_chunk 0
push argument 0
push constant 0
lt
push argument 0
push constant 35
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.ooyb_chunk 0
push argument 0
push constant 0
lt
push argument 0
push constant 27
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.translate_pixel_to_chunk 0
push argument 0
push constant 8
call Math.divide 2
return
function Game.is_chunk_start 1
push argument 0
push constant 8
call Math.divide 2
pop local 0
push local 0
push constant 8
call Math.multiply 2
push argument 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Game.random 3
push static 6
push static 7
add
push static 5
add
pop local 2
push local 2
push local 2
push constant 127
call Math.divide 2
push constant 127
call Math.multiply 2
sub
pop local 2
push static 7
pop static 6
push local 2
pop static 7
push local 2
push local 2
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
pop local 0
push local 0
push argument 0
add
pop pointer 1
push that 0
return
